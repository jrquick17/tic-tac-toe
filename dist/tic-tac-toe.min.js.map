{"version":3,"sources":["tic-tac-toe.min.js"],"names":["angular","module","TicTacToeService","$q","this","getWinner","cells","resolve","then","makeMove","value","i","reset","service","$inject","TicTacToeController","beginOpponentsTurn","opponenentValue","cell","switchTurn","beginUsersTurn","alert","select","isUsersTurn","userValue","setOrder","Math","floor","random","start","winner","stats","init","controller","directive","controllerAs","restrict","scope","template"],"mappings":"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","file":"tic-tac-toe.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('ticTacToe', []);\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').service(\n        'TicTacToeService',\n        TicTacToeService\n    );\n\n    TicTacToeService.$inject = [\n        '$q'\n    ];\n\n    function TicTacToeService(\n        $q\n    ) {\n        var TicTacToeService = this;\n\n        TicTacToeService.getWinner = getWinner;\n        function getWinner(cells) {\n            return $q.resolve().then(\n                function() {\n                    // Horizontal\n                    if (cells[0] === cells[1] && cells[1] === cells[2]) {\n                        return cells[0];\n                    } else if (cells[3] === cells[4] && cells[4] === cells[5]) {\n                        return cells[3];\n                    } else if (cells[6] === cells[7] && cells[7] === cells[8]) {\n                        return cells[6];\n                    }\n\n                    // Vertical\n                    if (cells[0] === cells[3] && cells[3] === cells[6]) {\n                        return cells[0];\n                    } else if (cells[1] === cells[4] && cells[4] === cells[7]) {\n                        return cells[1];\n                    } else if (cells[2] === cells[5] && cells[5] === cells[8]) {\n                        return cells[2];\n                    }\n\n                    // Diagonal\n                    if (cells[0] === cells[4] && cells[4] === cells[8]) {\n                        return cells[0];\n                    } else if (cells[2] === cells[4] && cells[4] === cells[6]) {\n                        return cells[2];\n                    }\n\n                    return null;\n                }\n            );\n        }\n        \n        TicTacToeService.makeMove = makeMove;\n        function makeMove(value, cells) {\n            return $q.resolve().then(\n                function() {\n                    for (var i = 0; i < 9; i++) {\n                        if (cells[i] === -1 && cells[i] !== value) {\n                            return i;\n                        }\n                    }\n\n                    return null;\n                }\n            );\n        }\n\n        TicTacToeService.reset = reset;\n        function reset() {\n\n        }\n        \n        TicTacToeService.reset();\n\n        return TicTacToeService;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').controller(\n        'TicTacToeController',\n        TicTacToeController\n    );\n\n    TicTacToeController.$inject = [\n        'TicTacToeService'\n    ];\n\n    function TicTacToeController(\n        TicTacToeService\n    ) {\n        var TicTacToeController = this;\n\n        TicTacToeController.beginOpponentsTurn = beginOpponentsTurn;\n        function beginOpponentsTurn() {\n            return TicTacToeService.makeMove(\n                TicTacToeController.opponenentValue,\n                TicTacToeController.cells\n            ).then(\n                function(cell) {\n                    if (cell !== null) {\n                        TicTacToeController.cells[cell] = TicTacToeController.opponenentValue;\n\n                        TicTacToeController.switchTurn();\n                    }\n                }\n            );\n        }\n\n        TicTacToeController.beginUsersTurn = beginUsersTurn;\n        function beginUsersTurn() {\n            alert('Your turn.');\n        }\n\n        TicTacToeController.select = select;\n        function select(cell) {\n            if (TicTacToeController.isUsersTurn) {\n                TicTacToeController.cells[cell] = TicTacToeController.userValue;\n\n                TicTacToeController.switchTurn();\n            }\n        }\n\n        TicTacToeController.setOrder = setOrder;\n        function setOrder() {\n            var random = Math.floor(Math.random() * 100);\n            if (random % 2 === 0) {\n                TicTacToeController.opponenentValue = 0;\n                TicTacToeController.userValue = 1;\n                TicTacToeController.isUsersTurn = true;\n            } else {\n                TicTacToeController.opponenentValue = 1;\n                TicTacToeController.userValue = 0;\n                TicTacToeController.isUsersTurn = false;\n            }\n        }\n\n        TicTacToeController.start = start;\n        function start() {\n            TicTacToeController.setOrder();\n\n            if (TicTacToeController.isUsersTurn) {\n                TicTacToeController.beginUsersTurn();\n            } else {\n                TicTacToeController.beginOpponentsTurn();\n            }\n        }\n\n        TicTacToeController.switchTurn = switchTurn;\n        function switchTurn() {\n            TicTacToeService.getWinner(\n                TicTacToeController.cells\n            ).then(\n                function(winner) {\n                    if (winner === TicTacToeController.opponenentValue) {\n                        alert('Haha loser!');\n                    } else if (winner === TicTacToeController.userValue) {\n                        alert('Beginner\\'s luck!');\n                    } else {\n                        TicTacToeController.isUsersTurn = !TicTacToeController.isUsersTurn;\n\n                        if (TicTacToeController.isUsersTurn) {\n                            TicTacToeController.beginUsersTurn();\n                        } else {\n                            TicTacToeController.beginOpponentsTurn();\n                        }\n                    }\n                }\n            );\n        }\n\n        TicTacToeController.reset = reset;\n        function reset() {\n            TicTacToeController.cells = [\n                -1, -1, -1,\n                -1, -1, -1,\n                -1, -1, -1\n            ];\n\n            TicTacToeController.opponenentValue = 1;\n\n            TicTacToeController.stats = false;\n\n            TicTacToeController.userValue = 0;\n\n            TicTacToeController.isUsersTurn = false;\n        }\n\n        TicTacToeController.init = init;\n        function init() {\n            TicTacToeController.reset();\n            TicTacToeController.start();\n        }\n\n        TicTacToeController.init();\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').directive(\n        'ticTacToe',\n        ticTacToe\n    );\n\n    function ticTacToe() {\n        return {\n            controller:   'TicTacToeController',\n            controllerAs: 'ctrl',\n            restrict:     'E',\n            scope:        {},\n            template:'<div class=\"board\"><div>{{ ctrl.isUsersTurn ? \\'YOUR TURN\\' : \\'OPPONENT\\\\\\'S TURN\\' }} <span data-ng-if=\"!ctrl.isUsersTurn\">(YOUR OPPONENT IS THINKING...)</span><div class=\"row\"><div data-ng-repeat=\"cell in ctrl.cells track by $index\" class=\"col-4\" data-ng-class=\"{ \\'disabled\\': !ctrl.isUsersTurn || cell !== -1, \\'x-cell\\': cell === 0, \\'o-cell\\': cell === 1 }\" data-ng-click=\"ctrl.select($index)\">{{ cell }}</div></div></div></div>'\n        };\n    }\n})();"]}