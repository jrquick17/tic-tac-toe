{"version":3,"sources":["tic-tac-toe.min.js"],"names":["angular","module","TicTacToeService","$q","this","getWinner","cells","resolve","then","i","makeMove","value","difficulty","makeHardMove","random","Math","round","makeEasyMove","reset","service","$inject","TicTacToeController","beginOpponentsTurn","opponenentValue","cell","switchTurn","beginUsersTurn","showMessage","select","isUsersTurn","userValue","isGameOver","setOrder","floor","fromUser","message","$","attr","popover","start","winner","stats","init","controller","directive","controllerAs","restrict","scope","template"],"mappings":"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","file":"tic-tac-toe.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('ticTacToe', []);\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').service(\n        'TicTacToeService',\n        TicTacToeService\n    );\n\n    TicTacToeService.$inject = [\n        '$q'\n    ];\n\n    function TicTacToeService(\n        $q\n    ) {\n        var TicTacToeService = this;\n\n        TicTacToeService.getWinner = getWinner;\n        function getWinner(cells) {\n            return $q.resolve().then(\n                function() {\n                    // Horizontal\n                    if (cells[0] !== -1 && cells[0] === cells[1] && cells[1] === cells[2]) {\n                        return cells[0];\n                    } else if (cells[3] !== -1 && cells[3] === cells[4] && cells[4] === cells[5]) {\n                        return cells[3];\n                    } else if (cells[6] !== -1 && cells[6] === cells[7] && cells[7] === cells[8]) {\n                        return cells[6];\n                    }\n\n                    // Vertical\n                    if (cells[0] !== -1 && cells[0] === cells[3] && cells[3] === cells[6]) {\n                        return cells[0];\n                    } else if (cells[1] !== -1 && cells[1] === cells[4] && cells[4] === cells[7]) {\n                        return cells[1];\n                    } else if (cells[2] !== -1 && cells[2] === cells[5] && cells[5] === cells[8]) {\n                        return cells[2];\n                    }\n\n                    // Diagonal\n                    if (cells[0] !== -1 && cells[0] === cells[4] && cells[4] === cells[8]) {\n                        return cells[0];\n                    } else if (cells[2] !== -1 && cells[2] === cells[4] && cells[4] === cells[6]) {\n                        return cells[2];\n                    }\n\n                    for (var i = 0; i < 9; i++) {\n                        if (cells[i] === -1) {\n                            return null;\n                        }\n                    }\n\n                    return -1;\n                }\n            );\n        }\n        \n        TicTacToeService.makeMove = makeMove;\n        function makeMove(value, cells, difficulty) {\n            return $q.resolve().then(\n                function() {\n                    // if (typeof difficulty === 'undefined' || difficulty === 'easy') {\n                    //     return TicTacToeService.makeEasyMove(value, cells);\n                    // } else if (difficulty === 'hard') {\n                        return TicTacToeService.makeHardMove(value, cells);\n                    // }\n                }\n            );\n        }\n\n        TicTacToeService.makeHardMove = makeHardMove;\n        function makeHardMove(value, cells) {\n            do {\n                var random = Math.round(Math.random() * 9);\n\n                if (cells[random] === -1 && cells[random] !== value) {\n                    return random;\n                }\n            } while (true);\n        }\n\n        TicTacToeService.makeEasyMove = makeEasyMove;\n        function makeEasyMove(value, cells) {\n            do {\n                var random = Math.round(Math.random() * 9);\n\n                if (cells[random] === -1 && cells[random] !== value) {\n                    return random;\n                }\n            } while (true);\n        }\n\n        TicTacToeService.reset = reset;\n        function reset() {\n\n        }\n        \n        TicTacToeService.reset();\n\n        return TicTacToeService;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').controller(\n        'TicTacToeController',\n        TicTacToeController\n    );\n\n    TicTacToeController.$inject = [\n        'TicTacToeService'\n    ];\n\n    function TicTacToeController(\n        TicTacToeService\n    ) {\n        var TicTacToeController = this;\n\n        TicTacToeController.beginOpponentsTurn = beginOpponentsTurn;\n        function beginOpponentsTurn() {\n            return TicTacToeService.makeMove(\n                TicTacToeController.opponenentValue,\n                TicTacToeController.cells\n            ).then(\n                function(cell) {\n                    if (cell !== null) {\n                        TicTacToeController.cells[cell] = TicTacToeController.opponenentValue;\n\n                        TicTacToeController.switchTurn();\n                    }\n                }\n            );\n        }\n\n        TicTacToeController.beginUsersTurn = beginUsersTurn;\n        function beginUsersTurn() {\n            TicTacToeController.showMessage(\n                false,\n                'IT IS YOUR TURN.'\n            );\n        }\n\n        TicTacToeController.select = select;\n        function select(cell) {\n            if (TicTacToeController.isUsersTurn) {\n                if (TicTacToeController.cells[cell] === -1) {\n                    TicTacToeController.cells[cell] = TicTacToeController.userValue;\n\n                    TicTacToeController.switchTurn();\n                } else {\n                    TicTacToeController.showMessage(\n                        false,\n                        'YOU CANNOT GO THERE!'\n                    );\n                }\n            } else if (TicTacToeController.isGameOver) {\n                TicTacToeController.showMessage(\n                    false,\n                    'THE GAME IS ALREADY OVER.'\n                );\n            } else {\n                TicTacToeController.showMessage(\n                    false,\n                    'SIMMER DOWN! IT\\'S MY TURN STILL!'\n                );\n            }\n        }\n\n        TicTacToeController.setOrder = setOrder;\n        function setOrder() {\n            var random = Math.floor(Math.random() * 100);\n            if (random % 2 === 0) {\n                TicTacToeController.opponenentValue = 0;\n                TicTacToeController.userValue = 1;\n                TicTacToeController.isUsersTurn = true;\n            } else {\n                TicTacToeController.opponenentValue = 1;\n                TicTacToeController.userValue = 0;\n                TicTacToeController.isUsersTurn = false;\n            }\n        }\n\n        TicTacToeController.showMessage = showMessage;\n        function showMessage(fromUser, message) {\n            var selector = fromUser ? '.user' : '.opponent';\n\n            $(selector).attr('data-content', message).popover('show');\n        }\n\n        TicTacToeController.start = start;\n        function start() {\n            TicTacToeController.setOrder();\n\n            if (TicTacToeController.isUsersTurn) {\n                TicTacToeController.beginUsersTurn();\n            } else {\n                TicTacToeController.beginOpponentsTurn();\n            }\n        }\n\n        TicTacToeController.switchTurn = switchTurn;\n        function switchTurn() {\n            TicTacToeService.getWinner(\n                TicTacToeController.cells\n            ).then(\n                function(winner) {\n                    if (winner === TicTacToeController.opponenentValue) {\n                        TicTacToeController.isGameOver = true;\n\n                        TicTacToeController.showMessage(\n                            false,\n                            'HAHA LOSER.'\n                        );\n                    } else if (winner === TicTacToeController.userValue) {\n                        TicTacToeController.isGameOver = true;\n\n                        TicTacToeController.showMessage(\n                            false,\n                            'GOOD JOB.'\n                        );\n                    } else if (winner === -1) {\n                        TicTacToeController.isGameOver = true;\n\n                        TicTacToeController.showMessage(\n                            false,\n                            'WE TIED.'\n                        );\n\n                        TicTacToeController.showMessage(\n                            true,\n                            'WE TIED.'\n                        );\n                    } else {\n                        TicTacToeController.isUsersTurn = !TicTacToeController.isUsersTurn;\n\n                        if (TicTacToeController.isUsersTurn) {\n                            TicTacToeController.beginUsersTurn();\n                        } else {\n                            TicTacToeController.beginOpponentsTurn();\n                        }\n                    }\n                }\n            );\n        }\n\n        TicTacToeController.reset = reset;\n        function reset() {\n            TicTacToeController.cells = [\n                -1, -1, -1,\n                -1, -1, -1,\n                -1, -1, -1\n            ];\n\n            TicTacToeController.isGameOver = false;\n\n            TicTacToeController.opponenentValue = 1;\n\n            TicTacToeController.stats = false;\n\n            TicTacToeController.userValue = 0;\n\n            TicTacToeController.isUsersTurn = false;\n        }\n\n        TicTacToeController.init = init;\n        function init() {\n            TicTacToeController.reset();\n            TicTacToeController.start();\n        }\n\n        TicTacToeController.init();\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('ticTacToe').directive(\n        'ticTacToe',\n        ticTacToe\n    );\n\n    function ticTacToe() {\n        return {\n            controller:   'TicTacToeController',\n            controllerAs: 'ctrl',\n            restrict:     'E',\n            scope:        {},\n            template:'<div class=\"global\"><div class=\"players row\"><a class=\"opponent col-6\" tabindex=\"0\" data-content data-placement=\"right\" data-toggle=\"popover\" data-trigger=\"focus\"><img src=\"img/opponent.png\"></a> <a class=\"user col-6\" tabindex=\"1\" data-content data-placement=\"left\" data-toggle=\"popover\" data-trigger=\"focus\"><img src=\"img/user.png\"></a></div><div class=\"board row\"><div data-ng-repeat=\"cell in ctrl.cells track by $index\" class=\"col-4 cell\" data-ng-class=\"{ \\'empty-cell\\': cell === -1, \\'opponent-x-cell\\': cell === 0 && ctrl.opponenentValue === 0, \\'opponent-o-cell\\': cell === 1 && ctrl.opponenentValue === 1, \\'user-x-cell\\': cell === 0 && ctrl.userValue === 0, \\'user-o-cell\\': cell === 1 && ctrl.userValue === 1 }\" data-ng-click=\"ctrl.select($index)\"></div></div></div>'\n        };\n    }\n})();"]}