{"version":3,"names":[],"mappings":"","sources":["tic-tac-toe.bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function () {\n    'use strict';\n\n    angular.module('ticTacToe', []);\n})();\n(function () {\n    'use strict';\n\n    angular.module('ticTacToe', []);\n})();\n(function () {\n    'use strict';\n\n    angular.module('ticTacToe').service('TicTacToeService', TicTacToeService);\n\n    TicTacToeService.$inject = ['$q'];\n\n    function TicTacToeService($q) {\n        var TicTacToeService = this;\n\n        TicTacToeService.getWinner = getWinner;\n        function getWinner(cells) {\n            return $q.resolve().then(function () {\n                // Horizontal\n                if (cells[0] === cells[1] && cells[1] === cells[2]) {\n                    return cells[0];\n                } else if (cells[3] === cells[4] && cells[4] === cells[5]) {\n                    return cells[3];\n                } else if (cells[6] === cells[7] && cells[7] === cells[8]) {\n                    return cells[6];\n                }\n\n                // Vertical\n                if (cells[0] === cells[3] && cells[3] === cells[6]) {\n                    return cells[0];\n                } else if (cells[1] === cells[4] && cells[4] === cells[7]) {\n                    return cells[1];\n                } else if (cells[2] === cells[5] && cells[5] === cells[8]) {\n                    return cells[2];\n                }\n\n                // Diagonal\n                if (cells[0] === cells[4] && cells[4] === cells[8]) {\n                    return cells[0];\n                } else if (cells[2] === cells[4] && cells[4] === cells[6]) {\n                    return cells[2];\n                }\n\n                return null;\n            });\n        }\n\n        TicTacToeService.makeMove = makeMove;\n        function makeMove(value, cells) {\n            return $q.resolve().then(function () {\n                for (var i = 0; i < 9; i++) {\n                    if (cells[i] === -1 && cells[i] !== value) {\n                        return i;\n                    }\n                }\n\n                return null;\n            });\n        }\n\n        TicTacToeService.reset = reset;\n        function reset() {}\n\n        TicTacToeService.reset();\n\n        return TicTacToeService;\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('ticTacToe').controller('TicTacToeController', TicTacToeController);\n\n    TicTacToeController.$inject = ['TicTacToeService'];\n\n    function TicTacToeController(TicTacToeService) {\n        var TicTacToeController = this;\n\n        TicTacToeController.beginOpponentsTurn = beginOpponentsTurn;\n        function beginOpponentsTurn() {\n            return TicTacToeService.makeMove(TicTacToeController.opponenentValue, TicTacToeController.cells).then(function (cell) {\n                if (cell !== null) {\n                    TicTacToeController.cells[cell] = TicTacToeController.opponenentValue;\n\n                    TicTacToeController.switchTurn();\n                }\n            });\n        }\n\n        TicTacToeController.beginUsersTurn = beginUsersTurn;\n        function beginUsersTurn() {\n            alert('Your turn.');\n        }\n\n        TicTacToeController.select = select;\n        function select(cell) {\n            if (TicTacToeController.isUsersTurn) {\n                TicTacToeController.cells[cell] = TicTacToeController.userValue;\n\n                TicTacToeController.switchTurn();\n            }\n        }\n\n        TicTacToeController.setOrder = setOrder;\n        function setOrder() {\n            var random = Math.floor(Math.random() * 100);\n            if (random % 2 === 0) {\n                TicTacToeController.opponenentValue = 0;\n                TicTacToeController.userValue = 1;\n                TicTacToeController.isUsersTurn = true;\n            } else {\n                TicTacToeController.opponenentValue = 1;\n                TicTacToeController.userValue = 0;\n                TicTacToeController.isUsersTurn = false;\n            }\n        }\n\n        TicTacToeController.start = start;\n        function start() {\n            TicTacToeController.setOrder();\n\n            if (TicTacToeController.isUsersTurn) {\n                TicTacToeController.beginUsersTurn();\n            } else {\n                TicTacToeController.beginOpponentsTurn();\n            }\n        }\n\n        TicTacToeController.switchTurn = switchTurn;\n        function switchTurn() {\n            TicTacToeService.getWinner(TicTacToeController.cells).then(function (winner) {\n                if (winner === TicTacToeController.opponenentValue) {\n                    alert('Haha loser!');\n                } else if (winner === TicTacToeController.userValue) {\n                    alert('Beginner\\'s luck!');\n                } else {\n                    TicTacToeController.isUsersTurn = !TicTacToeController.isUsersTurn;\n\n                    if (TicTacToeController.isUsersTurn) {\n                        TicTacToeController.beginUsersTurn();\n                    } else {\n                        TicTacToeController.beginOpponentsTurn();\n                    }\n                }\n            });\n        }\n\n        TicTacToeController.reset = reset;\n        function reset() {\n            TicTacToeController.cells = [-1, -1, -1, -1, -1, -1, -1, -1, -1];\n\n            TicTacToeController.opponenentValue = 1;\n\n            TicTacToeController.stats = false;\n\n            TicTacToeController.userValue = 0;\n\n            TicTacToeController.isUsersTurn = false;\n        }\n\n        TicTacToeController.init = init;\n        function init() {\n            TicTacToeController.reset();\n            TicTacToeController.start();\n        }\n\n        TicTacToeController.init();\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('ticTacToe').directive('ticTacToe', ticTacToe);\n\n    function ticTacToe() {\n        return {\n            controller: 'TicTacToeController',\n            controllerAs: 'ctrl',\n            restrict: 'E',\n            scope: {},\n            template: '<div class=\"board\"><div>{{ ctrl.isUsersTurn ? \\'YOUR TURN\\' : \\'OPPONENT\\\\\\'S TURN\\' }} <span data-ng-if=\"!ctrl.isUsersTurn\">(YOUR OPPONENT IS THINKING...)</span><div class=\"row\"><div data-ng-repeat=\"cell in ctrl.cells track by $index\" class=\"col-4\" data-ng-class=\"{ \\'disabled\\': !ctrl.isUsersTurn || cell !== -1, \\'x-cell\\': cell === 0, \\'o-cell\\': cell === 1 }\" data-ng-click=\"ctrl.select($index)\">{{ cell }}</div></div></div></div>'\n        };\n    }\n})();\n\n},{}]},{},[1]);\n"],"file":"tic-tac-toe.bundle.js"}