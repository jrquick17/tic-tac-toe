!function(){"use strict";angular.module("ticTacToe",[])}(),function(){"use strict";function e(){var e=this;return e.lossMessages=["AW SHUCKS!","I GOT DISTRACTED...","HOW IN THE?!","ARE YOU CHEATING?","I BET YOU WON'T WIN AGAIN.","WE ALL GET LUCKY.","DOUBLE OR NOTHING.","REMATCH?","BEGINNER'S LUCK!"],e.tieMessages=["CAT!","WE TIED!","UGH THIS AGAIN.","YOU PLAY LIKE A COWARD!","WE TIED AGAIN!"],e.winMessages=["HAHA LOSER!","NEXT!","*YAWN*","THAT WAS CUTE.","IS THAT ALL YOU'VE GOT?"],e.getLossMessage=function(){return e.selectMessage(e.lossMessages)},e.getTieMessage=function(){return e.selectMessage(e.tieMessages)},e.getWinMessage=function(){return e.selectMessage(e.winMessages)},e.selectMessage=function(e){var t=Math.random();return e[Math.round(t*e.length)]},e.reset=function(){},e.reset(),e}angular.module("ticTacToe").service("MessageService",e),e.$inject=[]}(),function(){"use strict";function e(){var e=this;function n(e,t){var n=this;n.points=t,n.where=e,n.getPoints=function(){return this.points},n.getWhere=function(){return this.where}}return e.getMove=function(e,t){return new n(e,t)},e.reset=function(){},e.reset(),e}angular.module("ticTacToe").service("MoveService",e),e.$inject=[]}(),function(){"use strict";function e(l){var u=this;function s(e,t,n,r){var s=this;s.children=[],s.move=void 0===n?null:n,s.parent=void 0===r?null:r,s.cells=e,s.value=t,s.expand=function(){for(var e=l.getAvailableMoves(this.cells),t=l.getOtherValue(this.value),n=e.length,r=0;r<n;r++){var s=e[r],i=angular.copy(this.cells);i[s]=this.value;var c=u.getNode(i,t,s,this);this.children.push(c)}for(var o=this.children.length,a=0;a<o;a++){null===l.getWinner(this.children[a].getCells())&&this.children[a].expand()}},s.fromParent=function(){for(var e=0,t=this,n=null;null!==(n=t.parent)&&(e++,t=n),null!==n;);return e},s.getCells=function(){return this.cells},s.getMove=function(){return this.move},s.getPoints=function(e){var t=0,n=l.getWinner(this.getCells());if(null!==n)return t=n===e?1:n===l.getOtherValue(e)?-1:0;for(var r=this.children.length,s=0;s<r;s++){var i=this.children[s];t+=i.getPoints(e)/i.fromParent()}return t}}return u.getNode=function(e,t,n,r){return new s(e,t,n,r)},u.reset=function(){},u.reset(),u}angular.module("ticTacToe").service("NodeService",e),e.$inject=["TicTacToeService"]}(),function(){"use strict";function e(r,l){var u=this;return u.getTree=function(){return u.tree},u.makeMove=function(e,t,n){return r.resolve().then(function(){return u.makeHardMove(e,t)})},u.makeHardMove=function(e,t){u.tree=l.getTree(t,e),u.tree.expand();for(var n=u.tree.getMoves(),r=n.length,s=null,i=Number.NEGATIVE_INFINITY,c=0;c<r;c++){var o=n[c],a=o.getPoints();i<a&&(s=o.getWhere(),i=o.getPoints())}return s},u.makeEasyMove=function(e,t){for(;;){var n=Math.round(9*Math.random());if(-1===t[n]&&t[n]!==e)return n}},u.reset=function(){u.tree={}},u.reset(),u}angular.module("ticTacToe").service("OpponentService",e),e.$inject=["$q","TreeService"]}(),function(){"use strict";function e(){var e=this;return e.getAvailableMoves=function(e){for(var t=[],n=0;n<9;n++)-1===e[n]&&t.push(n);return t},e.getWinner=function(e){{if(-1!==e[0]&&e[0]===e[1]&&e[1]===e[2])return e[0];if(-1!==e[3]&&e[3]===e[4]&&e[4]===e[5])return e[3];if(-1!==e[6]&&e[6]===e[7]&&e[7]===e[8])return e[6]}{if(-1!==e[0]&&e[0]===e[3]&&e[3]===e[6])return e[0];if(-1!==e[1]&&e[1]===e[4]&&e[4]===e[7])return e[1];if(-1!==e[2]&&e[2]===e[5]&&e[5]===e[8])return e[2]}{if(-1!==e[0]&&e[0]===e[4]&&e[4]===e[8])return e[0];if(-1!==e[2]&&e[2]===e[4]&&e[4]===e[6])return e[2]}for(var t=0;t<9;t++)if(-1===e[t])return null;return-1},e.getOtherValue=function(e){return 1===e?0:1},e.reset=function(){},e.reset(),e}angular.module("ticTacToe").service("TicTacToeService",e),e.$inject=[]}(),function(){"use strict";function e(c,r){function n(e,t){var n=this;n.parentNode=r.getNode(e,t),n.expand=function(){n.parentNode.expand()},n.getMoves=function(){for(var e=[],t=this.parentNode.children.length,n=0;n<t;n++){var r=this.parentNode.children[n],s=r.getPoints(this.parentNode.value),i=c.getMove(r.getMove(),s);e.push(i)}return e}}return this.getTree=function(e,t){return new n(e,t)},this.reset=function(){},this.reset(),this}angular.module("ticTacToe").service("TreeService",e),e.$inject=["MoveService","NodeService"]}(),function(){"use strict";function e(e,t,n){var r=this;t.$watch("cells",function(e){r.cells=e}),t.$watch("onClick",function(e){r.onClick=e}),t.$watch("userValue",function(e){r.opponentValue=n.getOtherValue(e),r.userValue=e}),r.click=function(e){r.onClick(e)},r.reset=function(){},r.init=function(){r.reset()},r.init()}angular.module("ticTacToe").controller("BoardController",e),e.$inject=["OpponentService","$scope","TicTacToeService"]}(),function(){"use strict";angular.module("ticTacToe").directive("board",function(){return{controller:"BoardController",controllerAs:"ctrl",restrict:"E",scope:{cells:"=",onClick:"=",userValue:"="},template:"<div class=\"board row animated zoomIn\"><div data-ng-repeat=\"cell in ctrl.cells track by $index\" class=\"col-4 cell\" data-ng-class=\"{ 'empty-cell': cell === -1, 'animated fadeIn': cell !== -1, 'opponent-x-cell': cell === 0 && ctrl.opponentValue === 0, 'opponent-o-cell': cell === 1 && ctrl.opponentValue === 1, 'user-x-cell': cell === 0 && ctrl.userValue === 0, 'user-o-cell': cell === 1 && ctrl.userValue === 1 }\" data-ng-click=\"ctrl.click($index)\"></div></div>"}})}(),function(){"use strict";function e(n,e,t){var r=this;r.beginOpponentsTurn=function(){return e.makeMove(r.opponentValue,r.cells).then(function(e){null!==e&&(r.cells[e]=r.opponentValue,r.switchTurn())})},r.beginUsersTurn=function(){r.showDialogue(!1,"IT IS YOUR TURN.")},r.endGame=function(e){if(!r.isGameOver){r.isGameOver=!0;var t="";t=!0===e?(r.wins++,n.getLossMessage()):!1===e?(r.losses++,n.getWinMessage()):(r.ties++,n.getTieMessage()),r.showDialogue(!1,t)}},r.select=function(e){r.isGameOver?r.showDialogue(!1,"THE GAME IS ALREADY OVER."):r.isUsersTurn?-1===r.cells[e]?(r.cells[e]=r.userValue,r.switchTurn()):r.showDialogue(!1,"YOU CANNOT GO THERE!"):r.showDialogue(!1,"SIMMER DOWN! IT'S MY TURN STILL!")},r.setOrder=function(){Math.floor(100*Math.random())%2==0?(r.opponentValue=0,r.userValue=1,r.isUsersTurn=!0):(r.opponentValue=1,r.userValue=0,r.isUsersTurn=!1)},r.showDialogue=function(e,t){$(e?".user":".opponent").attr("data-content",t).popover("show")},r.start=function(){r.setOrder(),r.isUsersTurn?r.beginUsersTurn():r.beginOpponentsTurn()},r.switchTurn=function(){var e=t.getWinner(r.cells);e===r.opponentValue?r.endGame(!1):e===r.userValue?r.endGame(!0):-1===e?r.endGame(null):(r.isUsersTurn=!r.isUsersTurn,r.isUsersTurn?r.beginUsersTurn():r.beginOpponentsTurn())},r.restart=function(){r.reset(),r.start()},r.reset=function(){r.cells=[-1,-1,-1,-1,-1,-1,-1,-1,-1],r.isGameOver=!1,r.opponentValue=1,r.userValue=0,r.isUsersTurn=!1},r.resetStats=function(){r.losses=0,r.ties=0,r.wins=0},r.init=function(){r.reset(),r.resetStats(),r.start()},r.init()}angular.module("ticTacToe").controller("TicTacToeController",e),e.$inject=["MessageService","OpponentService","TicTacToeService"]}(),function(){"use strict";angular.module("ticTacToe").directive("ticTacToe",function(){return{controller:"TicTacToeController",controllerAs:"ctrl",restrict:"E",scope:{},template:'<div class="global"><div class="players row"><a class="user col-6 animated bounceInLeft" tabindex="0" data-content data-placement="right" data-toggle="popover" data-trigger="focus"><img src="img/user.png"></a> <a class="opponent col-6 animated bounceInRight" tabindex="1" data-content data-placement="left" data-toggle="popover" data-trigger="focus"><img src="img/opponent.png"></a></div><scoreboard is-game-over="ctrl.isGameOver" losses="ctrl.losses" ties="ctrl.ties" wins="ctrl.wins"></scoreboard><div data-ng-if="ctrl.isGameOver" class="row animated fadeInDown"><button class="btn btn-primary btn-lg btn-block" data-ng-click="ctrl.restart()">PLAY AGAIN</button></div><board cells="ctrl.cells" on-click="ctrl.select" user-value="ctrl.userValue"></board></div>'}})}(),function(){"use strict";function e(e){var t=this;e.$watch("isGameOver",function(e){t.isGameOver=e}),e.$watch("losses",function(e){t.losses<e&&(t.lastResult=!1),t.losses=e}),e.$watch("ties",function(e){t.ties<e&&(t.lastResult=null),t.ties=e}),e.$watch("wins",function(e){t.wins<e&&(t.lastResult=!0),t.wins=e}),t.reset=function(){},t.init=function(){t.reset()},t.init()}angular.module("ticTacToe").controller("ScoreboardController",e),e.$inject=["$scope"]}(),function(){"use strict";angular.module("ticTacToe").directive("scoreboard",function(){return{controller:"ScoreboardController",controllerAs:"ctrl",restrict:"E",scope:{isGameOver:"=",losses:"=",ties:"=",wins:"="},template:'<div class="row"><div class="col text-center animated jackInTheBox" data-ng-class="{ \'animated flip\': ctrl.isGameOver && ctrl.lastResult === true }"><h3>WINS</h3><p>{{ ctrl.wins }}</p></div><div class="col text-center animated jackInTheBox" data-ng-class="{ \'animated flip\': ctrl.isGameOver && ctrl.lastResult === null }"><h3>TIES</h3><p>{{ ctrl.ties }}</p></div><div class="col text-center animated jackInTheBox" data-ng-class="{ \'animated flip\': ctrl.isGameOver && ctrl.lastResult === false }"><h3>LOSSES</h3><p>{{ ctrl.losses }}</p></div></div>'}})}();
//# sourceMappingURL=tic-tac-toe.min.js.map
